name: Auto VPS with pCloud Backup

on:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    steps:
      - name: ‚¨áÔ∏è Checkout Repo
        uses: actions/checkout@v3

      - name: üìÅ Create directories
        run: mkdir -p links .backup

      - name: üîÅ Restore from pCloud (WebDAV)
        run: |
          sudo apt update
          sudo apt install -y cadaver unzip
          mkdir restore
          cd restore
          echo "open https://webdav.pcloud.com
          user ${{ secrets.PCLOUD_USER }} ${{ secrets.PCLOUD_PASS }}
          mget autovps.zip
          bye" > restorecmds.txt
          cadaver -r restorecmds.txt || echo "‚ùå No backup found"
          unzip -o autovps.zip || echo "‚ùå Failed to unzip"

      - name: üîê Start tmate (SSH Access)
        run: |
          sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > links/autovps.txt
          echo "‚úÖ SSH Ready: $SSH"

      - name: üìÑ Commit SSH info to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "üîÅ Updated SSH link"
          file_pattern: 'links/*.txt'

      - name: üíæ Backup & Upload to pCloud
        if: always()
        run: |
          zip -r autovps.zip . -x ".git/*" ".github/*" "links/*" || echo "‚ùå Nothing to zip"
          echo "open https://webdav.pcloud.com
          user ${{ secrets.PCLOUD_USER }} ${{ secrets.PCLOUD_PASS }}
          put autovps.zip
          bye" > uploadcmds.txt
          cadaver -r uploadcmds.txt || echo "‚ùå Upload failed"

      - name: ‚è≥ Keep VPS Alive
        run: |
          echo "‚è≥ Sleeping for 6 hours..."
          sleep 21600
