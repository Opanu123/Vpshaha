name: Auto VPS with Minecraft + Playit + Filebase Backup

on:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 370  # 6 hours + buffer

    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v3

      - name: 📁 Create folders
        run: mkdir -p links paper .playit

      - name: 📥 Install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: 🔁 Restore backup from Filebase
        env:
          FILEBASE_ACCESS_KEY: ${{ secrets.FILEBASE_ACCESS_KEY }}
          FILEBASE_SECRET_KEY: ${{ secrets.FILEBASE_SECRET_KEY }}
          FILEBASE_BUCKET: ${{ secrets.FILEBASE_BUCKET }}
        run: |
          echo "[filebase]" > rclone.conf
          echo "type = s3" >> rclone.conf
          echo "provider = Other" >> rclone.conf
          echo "env_auth = false" >> rclone.conf
          echo "access_key_id = $FILEBASE_ACCESS_KEY" >> rclone.conf
          echo "secret_access_key = $FILEBASE_SECRET_KEY" >> rclone.conf
          echo "endpoint = https://s3.filebase.com" >> rclone.conf

          echo "🔁 Checking for backup..."
          rclone --config rclone.conf copy filebase:$FILEBASE_BUCKET/autovps.zip . || echo "❌ No backup found"

          if [ -f autovps.zip ]; then
            echo "🔄 Backup found, unzipping..."
            unzip -o autovps.zip || echo "❌ Unzip failed"
          else
            echo "⚠️ No backup zip found, skipping unzip."
          fi

      - name: 🔁 Restore Playit config
        run: |
          if [ -f links/playit.toml ]; then
            mkdir -p ~/.config
            cp links/playit.toml ~/.playit.toml
            echo "✅ Restored Playit config"
          fi

      - name: 📥 Download PaperMC
        run: |
          cd paper
          if [ ! -f paper.jar ]; then
            curl -o paper.jar https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/103/downloads/paper-1.20.1-103.jar
            echo "eula=true" > eula.txt
          fi

      - name: 🚀 Start Minecraft Server
        run: |
          cd paper
          nohup java -Xmx12G -Xms512M -jar paper.jar nogui > server.log 2>&1 &
          echo "✅ Minecraft started"

      - name: ⚙️ Install and Start Playit Agent
        run: |
          wget https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64
          chmod +x playit-linux-amd64
          mv playit-linux-amd64 playit

          nohup ./playit > playit.log 2>&1 &
          echo "⏳ Waiting for Playit agent to start..."
          sleep 25

          if [ -f ~/.playit.toml ]; then
            mkdir -p .playit
            cp ~/.playit.toml .playit/playit.toml
            cp ~/.playit.toml links/playit.toml
            echo "✅ Saved Playit config for next run"
          else
            echo "❌ Playit config not found yet — link your agent in Playit dashboard!"
          fi

      - name: 🔗 Extract SSH Link
        run: |
          SSH_LINK=$(grep -oE 'ssh:\/\/[^ ]+' links/playit.toml | head -n1)
          echo "$SSH_LINK" > links/ssh.txt
          echo "✅ SSH Link: $SSH_LINK"

      - name: 💾 Commit Playit config and SSH link
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated Playit config & SSH link"
          file_pattern: 'links/playit.toml,links/ssh.txt'

      - name: 💾 Auto backup every 30 minutes (12 times for 6 hours)
        env:
          FILEBASE_ACCESS_KEY: ${{ secrets.FILEBASE_ACCESS_KEY }}
          FILEBASE_SECRET_KEY: ${{ secrets.FILEBASE_SECRET_KEY }}
          FILEBASE_BUCKET: ${{ secrets.FILEBASE_BUCKET }}
        run: |
          for i in {1..12}; do
            echo "[filebase]" > rclone.conf
            echo "type = s3" >> rclone.conf
            echo "provider = Other" >> rclone.conf
            echo "env_auth = false" >> rclone.conf
            echo "access_key_id = $FILEBASE_ACCESS_KEY" >> rclone.conf
            echo "secret_access_key = $FILEBASE_SECRET_KEY" >> rclone.conf
            echo "endpoint = https://s3.filebase.com" >> rclone.conf

            zip -r autovps.zip . -x ".git/*" ".github/*" "links/*"
            rclone --config rclone.conf copy autovps.zip filebase:$FILEBASE_BUCKET
            sleep 1800
          done

      - name: ✅ Done
        run: echo "✅ VPS session finished"
