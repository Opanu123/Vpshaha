name: Auto VPS with pCloud Backup (rclone)

on:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v3

      - name: 📁 Create directories
        run: mkdir -p links .backup

      - name: 📥 Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: 🔁 Restore from pCloud backup using rclone
        env:
          PCLOUD_USER: ${{ secrets.PCLOUD_USER }}
          PCLOUD_PASS: ${{ secrets.PCLOUD_PASS }}
        run: |
          # Create rclone config file
          cat <<EOF > rclone.conf
[pcloud]
type = webdav
url = https://webdav.pcloud.com
vendor = other
user = $PCLOUD_USER
pass = $PCLOUD_PASS
EOF
          # Copy backup if exists
          rclone --config rclone.conf copy pcloud:autovps.zip . || echo "❌ No backup found"
          unzip -o autovps.zip || echo "❌ Failed to unzip"

      - name: 🔐 Start tmate (SSH Access)
        run: |
          sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > links/autovps.txt
          echo "✅ SSH Ready: $SSH"

      - name: 📄 Commit SSH info to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH link"
          file_pattern: 'links/*.txt'

      - name: 📤 Backup & upload VPS state using rclone
        env:
          PCLOUD_USER: ${{ secrets.PCLOUD_USER }}
          PCLOUD_PASS: ${{ secrets.PCLOUD_PASS }}
        run: |
          cat <<EOF > rclone.conf
[pcloud]
type = webdav
url = https://webdav.pcloud.com
vendor = other
user = $PCLOUD_USER
pass = $PCLOUD_PASS
EOF
          zip -r autovps.zip . -x ".git/*" ".github/*" "links/*" || echo "❌ Nothing to zip"
          rclone --config rclone.conf copy autovps.zip pcloud: || echo "❌ Upload failed"

      - name: ⏳ Keep VPS Alive
        run: |
          echo "⏳ Sleeping for 6 hours..."
          sleep 21600
