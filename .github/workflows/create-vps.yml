name: Minecraft Server with Filebase Backup

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours

jobs:
  minecraft:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Packages
      run: |
        sudo apt update
        sudo apt install -y unzip wget default-jdk tmate screen zip awscli
        mkdir -p server backups

    - name: Configure AWS Credentials for Filebase
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${{ secrets.FILEBASE_ACCESS_KEY }}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${{ secrets.FILEBASE_SECRET_KEY }}" >> ~/.aws/credentials
        echo "[default]" > ~/.aws/config
        echo "region = ${{ secrets.FILEBASE_REGION }}" >> ~/.aws/config
        echo "output = json" >> ~/.aws/config
        aws s3 ls s3://${{ secrets.FILEBASE_BUCKET }} --endpoint-url=https://s3.filebase.com

    - name: Restore Backup from Filebase
      run: |
        aws s3 cp s3://${{ secrets.FILEBASE_BUCKET }}/mcbackup.zip mcbackup.zip --endpoint-url=https://s3.filebase.com || true
        if [ -f mcbackup.zip ]; then
          unzip mcbackup.zip -d server
        fi

    - name: Download Paper Minecraft Server
      run: |
        wget -O paper.jar https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/103/downloads/paper-1.20.1-103.jar
        mv paper.jar server/paper.jar
        echo "eula=true" > server/eula.txt

    - name: Start Minecraft Server in Screen
      run: |
        cd server
        screen -dmS minecraft java -Xmx2G -jar paper.jar nogui

    - name: Start tmate and Save SSH Link
      run: |
        mkdir -p links
        tmate -S /tmp/tmate.sock new-session -d
        timeout 60 bash -c "until tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}' &>/dev/null; do sleep 2; done"
        TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
        echo "$TMATE_SSH" | tee links/ssh.txt
        git config --global user.name "auto"
        git config --global user.email "auto@example.com"
        git pull origin main || true
        git add links/ssh.txt
        git commit -m "Update SSH link" || true
        git push origin main || true

    - name: Backup Every 30 Minutes
      run: |
        while true; do
          echo "Zipping server directory..."
          zip -r -q mcbackup.zip server
          echo "Uploading to Filebase..."
          aws s3 cp mcbackup.zip s3://${{ secrets.FILEBASE_BUCKET }}/mcbackup.zip --endpoint-url=https://s3.filebase.com
          echo "Backup done. Sleeping 30 minutes..."
          sleep 1800
        done
