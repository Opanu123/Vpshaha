name: Minecraft Server with Auto Backup + SSH

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  minecraft:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.FILEBASE_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.FILEBASE_SECRET_KEY }}
      FILEBASE_BUCKET: ${{ secrets.FILEBASE_BUCKET }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y openjdk-17-jre tmate unzip curl
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Restore Backup from Filebase
      run: |
        mkdir -p server
        cd server
        aws --endpoint-url=https://s3.filebase.com s3 cp s3://$FILEBASE_BUCKET/mcbackup.zip mcbackup.zip || exit 0
        unzip -o mcbackup.zip || echo "No backup found"

    - name: Download PaperMC
      run: |
        cd server
        curl -o paper.jar https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/183/downloads/paper-1.20.1-183.jar
        echo "eula=true" > eula.txt

    - name: Start Minecraft Server in Background
      run: |
        cd server
        nohup java -Xmx2G -Xms2G -jar paper.jar nogui > log.txt 2>&1 &

    - name: Start SSH Auto-Rotation + Backup
      run: |
        git config --global user.name "Auto Bot"
        git config --global user.email "auto@bot.com"
        mkdir -p links

        while true; do
          # Kill old tmate
          pkill tmate || true
          
          # Start new tmate
          tmate -S /tmp/tmate.sock new-session -d
          sleep 5
          TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')

          echo "$TMATE_SSH" > links/ssh.txt

          git add links/ssh.txt
          git commit -m "Updated SSH link $(date -u)"
          git push origin main

          echo "[SSH] New link pushed: $TMATE_SSH"
          
          # Background 30-min backup
          ( sleep 900 && \
            cd server && \
            zip -r ../mcbackup.zip . && \
            aws --endpoint-url=https://s3.filebase.com s3 cp ../mcbackup.zip s3://$FILEBASE_BUCKET/mcbackup.zip && \
            echo "[Backup] Uploaded at $(date -u)"
          ) &

          sleep 900
        done
